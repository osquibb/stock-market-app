{"version":3,"sources":["components/StockCell.js","config.js","components/Stocks.js","components/CurrencyCell.js","components/Currencies.js","App.js","serviceWorker.js","index.js"],"names":["ChartContainer","styled","div","_templateObject","RangeButton","_templateObject2","StockData","_templateObject3","StockInput","input","_templateObject4","StockCell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","price","change","symbol","getStockData","bind","assertThisInitialized","getQuote","selectSymbol","console","log","e","_this2","keyCode","setState","target","value","toUpperCase","fetch","concat","then","response","json","catch","error","range","fetchURL","propValues","Array","length","i","split","undefined","parseFloat","keys","slice","reverse","_this3","react_default","a","createElement","Fragment","Row","className","hidden","placeholder","onKeyDown","style","paddingLeft","paddingRight","Col","onClick","es","options","maintainAspectRatio","Math","round","color","parseInt","substring","React","Component","Stocks","selected","StockCell_StockCell","CurrencyDataContainer","CurrencyCell_templateObject","CurrencyDataTitle","h4","CurrencyCell_templateObject2","CurrencyData","h6","CurrencyCell_templateObject3","Filler","CurrencyCell_templateObject4","CurrencyInput","_templateObject5","CurrencyCell","inputText","fromCurrency","toCurrency","exchangeRate","date","selectCurrencies","getCurrencyData","Currencies","CurrencyCell_CurrencyCell","SideMenu","App_templateObject","SideMenuItem","App_templateObject2","App","Container","fluid","height","xs","maxWidth","Stocks_Stocks","Currencies_Currencies","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87b83a2f.chunk.js","sourcesContent":["import React from 'react';\nimport { ALPHA_VANTAGE_API_KEY } from '../config';\nimport { Line } from 'react-chartjs-2';\nimport { Row, Col } from 'reactstrap';\nimport styled from 'styled-components';\n\n// props: stock='MSFT', range='1D' (1D, 10D, 1M, 3M, 1Y, Max)\n\nconst ChartContainer = styled.div`\nheight: 30vh;\njustify-content: center;\nmin-width: 200px;\nmin-height: 140px\nborder-radius: 15px;\n`;\n\nconst RangeButton = styled.div`\nbackground-color: #DE7E80;\nborder-radius: 5px;\ntext-align: center;\nmargin-top: 10px;\nmargin-bottom: 10px;\npadding-left: 2px;\npadding-right: 2px;\n&:hover {\n  background-color: #20375B;\n  color: white;\n  border-color: white;\n  cursor: pointer;\n}\n`;\n\nconst StockData = styled.div`\nborder-radius: 5px;\ntext-align: center;\nmargin-top: 5px;\nmargin-bottom: 5px;\n&:hover {\n  cursor: default;\n}\n`;\n\nconst StockInput = styled.input`\nborder-radius: 5px;\nmargin-top: 20px;\nmargin-bottom: 10px;\npadding-left: 5px;\nwidth: 240px;\nborder: 1px solid transparent;\nbackground-color: #DE7E80;\ncolor: white;\n::placeholder {\n  color: white;\n}\n&:focus {\n  outline: none;\n}\n&:hover {\n  border-color: black;\n}\n`;\n\n\nexport default class StockCell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {chartData: {\n                    labels: [],\n                    datasets: [\n                      {\n                        label: '',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(75,192,192,0.4)',\n                        borderColor: 'rgba(75,192,192,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: 'rgba(75,192,192,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: []\n                      }\n                    ]\n                  },\n                  price: 0,\n                  change: '0%',\n                  symbol: null    \n    };\n    this.getStockData = this.getStockData.bind(this);\n    this.getQuote = this.getQuote.bind(this);\n    this.selectSymbol = this.selectSymbol.bind(this);\n  };\n\n  componentDidMount() {\n    console.log('Stock Cell Mounted');\n  }\n\n  selectSymbol(e) {\n    if (e.keyCode === 13) {\n      this.setState({symbol: e.target.value.toUpperCase()}, () => {\n        this.getQuote(this.state.symbol);\n        this.getStockData(this.state.symbol);\n      });\n    }\n  }\n\n  async getQuote(symbol) {\n\n    let price = this.state.price;\n    let change = this.state.change;\n\n    await fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`)\n        .then(response => response.json())\n        .then(data => {\n          if (data[\"Global Quote\"]) {\n            price = data[\"Global Quote\"][\"05. price\"];\n            change = data[\"Global Quote\"][\"10. change percent\"];\n          }\n        })\n        .catch(error => console.log(error));\n    \n    this.setState({price: price, change: change})\n\n  }\n\n  async getStockData(symbol, range) {\n\n    const chartData = {...this.state.chartData};\n\n    let fetchURL = '';\n    chartData.datasets[0].label = `${symbol} ${range ? range: ''}`;\n\n    switch (range) {\n      case '1D':\n        fetchURL = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=15min&apikey=${ALPHA_VANTAGE_API_KEY}`;\n        chartData.labels = ['9:45', '10:00', '10:15', '10:30', '10:45', '11:00', '11:15', '11:30', '11:45', '12:00', '12:15', '12:30', '12:45',\n        '13:00', '13:15', '13:30', '13:45', '14:00', '14:15', '14:30', '14:45', '15:00', '15:15', '15:30', '15:45', '16:00'];\n        \n        await fetch(fetchURL)\n        .then(response => response.json())\n        .then(data => {\n          if(!data) {\n            return;\n          }\n          const propValues = new Array(chartData.labels.length);\n          if (data[\"Meta Data\"]) {\n            for (let i=0; i < propValues.length; i++) {\n              propValues[i] = `${data[\"Meta Data\"][\"3. Last Refreshed\"].split(' ')[0]} ${chartData.labels[i]}:00`;\n            }\n            chartData.datasets[0].data = new Array(chartData.labels.length);\n            for (let i=0; i < chartData.datasets[0].data.length; i++) {\n              chartData.datasets[0].data[i] = data[\"Time Series (15min)\"][propValues[i]] === undefined ? null : parseFloat(data[\"Time Series (15min)\"][propValues[i]][\"4. close\"]);\n            }\n          }\n        })\n        .catch(error => console.log(error));\n\n        break;\n        \n      case '10D':\n        fetchURL = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`;\n\n        await fetch(fetchURL)\n        .then(response => response.json())\n        .then(data => {\n          if(!data) {\n            return;\n          }\n          if (Object.keys(data)) {\n            chartData.labels = Object.keys(data[\"Time Series (Daily)\"]).slice(0,10);\n            chartData.labels.reverse();\n            chartData.datasets[0].data = new Array(chartData.labels.length);\n            for (let i=0; i < chartData.datasets[0].data.length; i++) {\n              chartData.datasets[0].data[i] = data[\"Time Series (Daily)\"][chartData.labels[i]] === undefined ? null : parseFloat(data[\"Time Series (Daily)\"][chartData.labels[i]][\"4. close\"]);\n            }\n          }\n        })\n        .catch(error => console.log(error));\n\n        break;\n\n      case '1M':\n      \n        fetchURL = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`;\n\n        await fetch(fetchURL)\n        .then(response => response.json())\n        .then(data => {\n          if(!data) {\n            return;\n          }\n          if (Object.keys(data)) {\n            chartData.labels = Object.keys(data[\"Time Series (Daily)\"]).length >= 30 ?\n            Object.keys(data[\"Time Series (Daily)\"]).slice(0,30) :\n            Object.keys(data[\"Time Series (Daily)\"]);\n            chartData.labels.reverse(); \n            chartData.datasets[0].data = new Array(chartData.labels.length);\n            for (let i=0; i < chartData.datasets[0].data.length; i++) {\n              chartData.datasets[0].data[i] = data[\"Time Series (Daily)\"][chartData.labels[i]] === undefined ? null : parseFloat(data[\"Time Series (Daily)\"][chartData.labels[i]][\"4. close\"]);\n            }\n          }\n        })\n        .catch(error => console.log(error));\n\n        break;\n\n      case '3M':\n        fetchURL = `https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`;\n        \n        await fetch(fetchURL)\n        .then(response => response.json())\n        .then(data => {\n          if(!data) {\n            return;\n          }\n          if (Object.keys(data)) {\n            chartData.labels = Object.keys(data[\"Weekly Time Series\"]).length >= 12 ?\n            Object.keys(data[\"Weekly Time Series\"]).slice(0,12) :\n            Object.keys(data[\"Weekly Time Series\"]);\n            chartData.labels.reverse(); \n            chartData.datasets[0].data = new Array(chartData.labels.length);\n            for (let i=0; i < chartData.datasets[0].data.length; i++) {\n              chartData.datasets[0].data[i] = data[\"Weekly Time Series\"][chartData.labels[i]] === undefined ? null : parseFloat(data[\"Weekly Time Series\"][chartData.labels[i]][\"4. close\"]);\n            }\n          }\n        })\n        .catch(error => console.log(error));\n        \n        break;\n\n      case '1Y':\n        fetchURL = `https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`;\n        \n        await fetch(fetchURL)\n        .then(response => response.json())\n        .then(data => {\n          if(!data) {\n            return;\n          }\n          if (Object.keys(data)) {\n            chartData.labels = Object.keys(data[\"Monthly Time Series\"]).length >= 12 ?\n            Object.keys(data[\"Monthly Time Series\"]).slice(0,12) :\n            Object.keys(data[\"Monthly Time Series\"]);\n            chartData.labels.reverse(); \n            chartData.datasets[0].data = new Array(chartData.labels.length);\n            for (let i=0; i < chartData.datasets[0].data.length; i++) {\n              chartData.datasets[0].data[i] = data[\"Monthly Time Series\"][chartData.labels[i]] === undefined ? null : parseFloat(data[\"Monthly Time Series\"][chartData.labels[i]][\"4. close\"]);\n            }\n          }\n        })\n        .catch(error => console.log(error));\n\n        break;\n\n      default:\n          fetchURL = `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=15min&apikey=${ALPHA_VANTAGE_API_KEY}`;\n          chartData.labels = ['9:45', '10:00', '10:15', '10:30', '10:45', '11:00', '11:15', '11:30', '11:45', '12:00', '12:15', '12:30', '12:45',\n           '13:00', '13:15', '13:30', '13:45', '14:00', '14:15', '14:30', '14:45', '15:00', '15:15', '15:30', '15:45', '16:00'];\n          \n          await fetch(fetchURL)\n          .then(response => response.json())\n          .then(data => {\n          if(!data) {\n            return;\n          }\n          const propValues = new Array(chartData.labels.length);\n          if (data[\"Meta Data\"]) {\n            for (let i=0; i < propValues.length; i++) {\n              propValues[i] = `${data[\"Meta Data\"][\"3. Last Refreshed\"].split(' ')[0]} ${chartData.labels[i]}:00`;\n            }\n            chartData.datasets[0].data = new Array(chartData.labels.length);\n            for (let i=0; i < chartData.datasets[0].data.length; i++) {\n              chartData.datasets[0].data[i] = data[\"Time Series (15min)\"][propValues[i]] === undefined ? null : parseFloat(data[\"Time Series (15min)\"][propValues[i]][\"4. close\"]);\n            }\n          }\n          })\n          .catch(error => console.log(error));\n    }\n\n    this.setState({chartData: chartData});\n   \n  }\n\n  render() {    \n    return(\n      <React.Fragment>\n        <Row className=\"justify-content-center\" hidden={this.state.symbol !== null}>\n          <StockInput \n            placeholder=\"Enter ticker symbol...\"\n            onKeyDown={this.selectSymbol}\n          />\n        </Row>\n          <Row hidden={this.state.symbol === null} style={{paddingLeft: 20, paddingRight: 20}}>\n            <Col>\n              <RangeButton\n                onClick={() => this.getStockData(this.state.symbol, '1D')}>\n                1D\n              </RangeButton>\n            </Col>\n            <Col>\n              <RangeButton\n                onClick={() => this.getStockData(this.state.symbol, '10D')}>\n                10D\n              </RangeButton>\n            </Col>\n            <Col>\n              <RangeButton\n                onClick={() => this.getStockData(this.state.symbol, '1M')}>\n                1M\n              </RangeButton>\n            </Col>\n            <Col>\n              <RangeButton\n                onClick={() => this.getStockData(this.state.symbol, '3M')}>\n                3M\n              </RangeButton>\n            </Col>\n            <Col>\n              <RangeButton\n                onClick={() => this.getStockData(this.state.symbol, '1Y')}>\n                1Y\n              </RangeButton>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <ChartContainer>\n                <Line \n                  data={this.state.chartData}\n                  options={\n                    {maintainAspectRatio: false}\n                  } />\n              </ChartContainer>\n              <Row>\n                <Col>\n                  <StockData><strong>Price</strong> : ${Math.round(this.state.price*100)/100}</StockData>\n                  <StockData><strong>Change</strong> : <span style={{color: parseInt(this.state.change.substring(0, this.state.change.length - 1)) >= 0 ? 'green': 'red'}}>{this.state.change}</span></StockData>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n      </React.Fragment>\n    );\n  }\n}\n","export const ALPHA_VANTAGE_API_KEY = 'MA4OHKLGGWPC2AJD';\n\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport StockCell from './StockCell';\n\nexport const Stocks = (props) => {\n\n  return (\n    <div hidden={!props.selected}>\n      <Row>\n        <Col>\n          <StockCell />\n        </Col>\n        <Col>\n          <StockCell />\n        </Col>\n      </Row>\n    </div>           \n  ); \n}\n","import React from 'react';\nimport { ALPHA_VANTAGE_API_KEY } from '../config';\nimport { Row, Col } from 'reactstrap';\nimport styled from 'styled-components';\n\n// props: stock='MSFT', range='1D' (1D, 10D, 1M, 3M, 1Y, Max)\n\nconst CurrencyDataContainer = styled.div`\nheight: 30vh;\njustify-content: center;\nmin-width: 200px;\nmin-height: 140px\nborder: 1px solid #EAEAE8;\nborder-radius: 15px;\n`;\n\nconst CurrencyDataTitle = styled.h4`\nheight: 60px;\npadding-top: 10px;\ntext-align: center;\ncolor: black;\n`;\n\nconst CurrencyData = styled.h6`\ntext-align: center;\ncolor: black;\n`;\n\nconst Filler = styled.div`\nheight: 98px;\nwidth: 100%;\n`;\n\nconst CurrencyInput = styled.input`\nborder-radius: 5px;\nmargin-top: 20px;\nmargin-bottom: 10px;\npadding-left: 5px;\nwidth: 240px;\nborder: 1px solid transparent;\nbackground-color: #DE7E80;\ncolor: white;\n::placeholder {\n  color: white;\n}\n&:focus {\n  outline: none;\n}\n&:hover {\n  border-color: black;\n}\n`;\n\n\nexport default class CurrencyCell extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = { \n                  inputText: '',\n                  fromCurrency: '',\n                  toCurrency: '',\n                  exchangeRate: 'N/A',\n                  date: '' \n                };\n    this.selectCurrencies = this.selectCurrencies.bind(this);\n  }\n\n  selectCurrencies(e) {\n    if (e.keyCode === 13) {\n      this.setState({inputText: e.target.value}, () => {\n        const fromCurrency = this.state.inputText.split(' ')[0].toUpperCase();\n        const toCurrency = this.state.inputText.split(' ')[1].toUpperCase();\n        this.getCurrencyData(fromCurrency, toCurrency);\n      });\n    }\n  }\n\n  getCurrencyData(fromCurrency, toCurrency) {\n    console.log('called');\n    fetch(`https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${fromCurrency}&to_currency=${toCurrency}&apikey=${ALPHA_VANTAGE_API_KEY}`)\n    .then(response => response.json())\n    .then(data => {\n      if(!data) {\n        return;\n      }\n      const exchangeRate = data[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"];\n      const date = data[\"Realtime Currency Exchange Rate\"][\"6. Last Refreshed\"].split(' ')[0];\n      const fromCurrency = data[\"Realtime Currency Exchange Rate\"][\"1. From_Currency Code\"];\n      const toCurrency = data[\"Realtime Currency Exchange Rate\"][\"3. To_Currency Code\"];\n\n      this.setState({exchangeRate, date, fromCurrency, toCurrency});\n    })\n    .catch(error => console.log(error));\n  }\n\n  render() {    \n    return(\n      <React.Fragment>\n        <Row className=\"justify-content-center\" hidden={this.state.exchangeRate !== 'N/A'}>\n          <CurrencyInput \n            placeholder=\"Enter currencies...\"\n            onKeyDown={this.selectCurrencies}\n          />\n          <p>* Separated by a space (eg: \"USD EUR\")</p>\n        </Row>\n        <Row hidden={this.state.exchangeRate === 'N/A'}>\n          <Filler />\n        </Row>\n        <Row>\n          <Col>\n            <CurrencyDataContainer>\n              <CurrencyDataTitle>{this.state.fromCurrency} - {this.state.toCurrency}</CurrencyDataTitle>\n              <CurrencyData>Exchange Rate: {this.state.exchangeRate === 'N/A' ? 'N/A' : Math.round(this.state.exchangeRate*100)/100}</CurrencyData>\n              <CurrencyData>{this.state.date}</CurrencyData>\n            </CurrencyDataContainer>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport CurrencyCell from './CurrencyCell';\n\n\nexport const Currencies = (props) => {\n\n  return (\n    <div hidden={!props.selected}>\n      <Row>\n        <Col>\n          <CurrencyCell />\n        </Col>\n        <Col>\n          <CurrencyCell />\n        </Col>\n      </Row>\n    </div>           \n  ); \n}\n","import React from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport styled from 'styled-components';\nimport { Stocks } from './components/Stocks';\nimport { Currencies } from './components/Currencies';\n\nconst SideMenu = styled.div`\n  background-color: #DE7E80;\n  padding-top: 10px;\n  width: 100%;\n  height: 100%;\n`;\n\nconst SideMenuItem = styled.h6`\n  width: 100%;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  text-align: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  background-color: ${props => props.selected ? '#20375B' : null};\n  color: ${props => props.selected ? 'white' : null};\n  &:hover {\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {selected: 'Stocks'};\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row style={{height: \"100vh\"}}>\n          <Col xs=\"4\">\n            <SideMenu>\n              <Row>\n                <Col>\n                  <SideMenuItem \n                    selected={this.state.selected === 'Stocks'}\n                    onClick={() => this.setState({selected: 'Stocks'})}\n                  >\n                      Stocks\n                  </SideMenuItem>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <SideMenuItem\n                    selected={this.state.selected === 'Currencies'}\n                    onClick={() => this.setState({selected: 'Currencies'})}\n                  >\n                    Currencies\n                  </SideMenuItem>\n                </Col> \n              </Row>\n            </SideMenu>\n          </Col>\n          <Col xs=\"8\">\n            <Container style={{maxWidth: \"300px\"}}>\n              <Stocks selected={this.state.selected === 'Stocks'} />\n              <Currencies selected={this.state.selected === 'Currencies'} />\n            </Container>            \n          </Col>\n        </Row>\n      </Container>\n    ); \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}